#!/bin/bash

comp_func(){
	local COMPREPLY
	COMPREPLY=$(compgen -W "$2" -- "${COMP_WORDS[COMP_CWORD]}")
}; complete -F comp_func read

read_file(){
	while true; do
		echo -e '\nEnter filename\n'
		read -rep '- ' FILE
		if [ -z "$FILE" ]; then echo -e '\nErr: No input provided'
		elif [ ! -f "$FILE" ]; then echo -e '\nErr: Arg must be a file'
		else break
		fi
	done
}

[ -n "$1" ] && FILE="$1" || read_file
echo -e '\nSelect GPG operation'
echo -e '- [O] Output to file'
echo -e '- [P] Print to terminal'
echo -e '- [E] Encrypt file'
echo -e '- [C] Change password\n'
read -rep '- ' OPERATION

case $OPERATION in
	o) echo -e '\nEnter output filename\n'
		read -rep '- ' OUTFILE
		echo -e "\nDecrypting $FILE to $OUTFILE\n"
		gpg --decrypt -o "$OUTFILE" "$FILE" 2>'/dev/null';;
	p) echo -e "\nDecrypting and printing $FILE\n"
		gpg --decrypt "$FILE" 2>'/dev/null'; echo;;
	e) OUTFILE="${FILE}.gpg"
		echo -e "\nEncrypting $FILE to $OUTFILE\n"
		gpg -c "$FILE" 2>'/dev/null'
		if [ $? -eq 0 ]; then echo -e "\n$FILE encrypted successfully\n"
		else echo -e '\nEncryption failed\n' && exit 1
		fi;;
	c) echo -e "\nChanging password for $FILE\n"
		TEMPFILE=$(mktemp)
		gpg --decrypt -o "$TEMPFILE" "$FILE" 2>'/dev/null'
		if [ $? -eq 0 ]; then
			echo -e "\nEnter new password for $FILE\n"
			gpg -c -o "$FILE" "$TEMPFILE"
			if [ $? -eq 0 ]; then echo -e '\nPassword changed successfully\n'
			else echo -e '\nEncryption failed\n'
			fi
			rm -f "$TEMPFILE"
		else echo -e 'Decryption failed\n' && rm -f "$TEMPFILE"
		fi;;
	*) echo -e '\nInvalid operation\n';;
esac